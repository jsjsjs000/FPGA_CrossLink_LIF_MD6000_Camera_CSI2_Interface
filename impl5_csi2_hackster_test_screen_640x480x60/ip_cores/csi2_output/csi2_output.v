// =============================================================================
// >>>>>>>>>>>>>>>>>>>>>>>>> COPYRIGHT NOTICE <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
// -----------------------------------------------------------------------------
//   Copyright (c) 2017 by Lattice Semiconductor Corporation
//   ALL RIGHTS RESERVED
// -----------------------------------------------------------------------------
//
//   Permission:
//
//      Lattice SG Pte. Ltd. grants permission to use this code
//      pursuant to the terms of the Lattice Reference Design License Agreement.
//
//
//   Disclaimer:
//
//      This VHDL or Verilog source code is intended as a design reference
//      which illustrates how these types of functions can be implemented.
//      It is the user's responsibility to verify their design for
//      consistency and functionality through the use of formal
//      verification methods.  Lattice provides no warranty
//      regarding the use or functionality of this code.
//
// -----------------------------------------------------------------------------
//
//                  Lattice SG Pte. Ltd.
//                  101 Thomson Road, United Square #07-02
//                  Singapore 307591
//
//
//                  TEL: 1-800-Lattice (USA and Canada)
//                       +65-6631-2000 (Singapore)
//                       +1-503-268-8001 (other locations)
//
//                  web: http://www.latticesemi.com/
//                  email: techsupport@latticesemi.com
//
// -----------------------------------------------------------------------------
//
// =============================================================================
//                         FILE DETAILS
// Project               : DPHY_TX
// File                  : dphy_tx.v
// Title                 : Wrapper of top module for D-PHY Tx Sub-module IP
// Dependencies          : 1.
//                       : 2.
// Description           :
// =============================================================================
//                        REVISION HISTORY
// Version               : 1.0
// Author(s)             : Davit Tamazyan (IMT)
// Mod. Date             : 04/15/17
// Changes Made          : Initial Release
// -----------------------------------------------------------------------------

//===========================================================================
// Verilog file generated by Clarity Designer    10/12/2024    18:06:21  
// Filename  : csi2_output.v                                                
// IP package: CSI-2/DSI D-PHY Transmitter 1.4                           
// Copyright(c) 2017 Lattice Semiconductor Corporation. All rights reserved. 
//===========================================================================

module csi2_output #
// -----------------------------------------------------------------------------
// Module Parameters
// -----------------------------------------------------------------------------
(
///
  parameter             TX_GEAR       = 8,
///
  parameter   [3*8-1:0] PKT_FORMATTER = "ON",
///
  parameter   [4*8-1:0] INTF_TYPE     = "CSI2",
///
  parameter             NUM_TX_LANE   = 2,
///
  parameter   [3*8-1:0] TINIT_COUNT   = "ON",
///
parameter        [15:0] TINIT_VALUE   = 1000,
/// 
  parameter   [3*8-1:0] FRAME_CNT_EN  = "ON",
/// 
  parameter   [3*8-1:0] LINE_CNT_EN   = "ON",
///
  parameter   [3*8-1:0] USER_TIMING   = "ON",
  parameter             T_LPX         = 0,
  parameter             T_CLKPREP     = 0,
  parameter             T_CLK_HSZERO  = 0,
  parameter             T_CLKPRE      = 0,
  parameter             T_CLKPOST     = 0,
  parameter             T_CLKTRAIL    = 0,
  parameter             T_CLKEXIT     = 0,
  parameter             T_DATPREP     = 0,
  parameter             T_DAT_HSZERO  = 0,
  parameter             T_DATTRAIL    = 0,
  parameter             T_DATEXIT     = 0,
///
  parameter   [3*8-1:0] MISC          = "ON",
///
  parameter   [3*8-1:0] HS_DCS        = "OFF",
///
  parameter   [    7:0] CM            = 8'd216,
  parameter   [    4:0] CN            = 5'd0,
  parameter   [    2:0] CO            = 2'd3,
///
  parameter             TX_FREQ_TGT   = 21,
///
  parameter   [7*8-1:0] CLK_MODE      = "HS_LP",
///
  parameter             PKTHDR_FIFO_IMPL     = "EBR",           // FIFO implementation
  parameter             PKTHDR_FIFO_DEPTH    = 64,          // FIFO implementation
  parameter             CRC16         = 1,           // Appends 16-bit checksum to the
  parameter             DATA_WIDTH    = 16,          // Always set to 16.
/// Internal
  parameter             PKT_WIDTH     = TX_GEAR*NUM_TX_LANE
)
// -----------------------------------------------------------------------------
// Input/Output Ports
// -----------------------------------------------------------------------------
(

//------Common Interface Ports
input  wire                   ref_clk_i,                           // Pixel or refclk clock
input  wire                   reset_n_i,                           // Asynchronous reset
input  wire                   pd_dphy_i,                           // DPHY PD signal
//------Input byte data
input  wire            [63:0] byte_data_i,                         // Byte data
input  wire                   byte_data_en_i,                      // Byte data enable
//------CSI Interface Ports
input  wire                   sp_en_i,                             // Short packet enable
input  wire                   lp_en_i,                             // Long packet enable
output wire                   ld_pyld_o,                           // Load payload
input  wire                   frame_max_i,                         // Maximum number of frame counter
//------Packet Settings
input  wire             [1:0] vc_i,                                // Virtual channel
input  wire             [5:0] dt_i,                                // Data type
input  wire            [15:0] wc_i,                                // Word count
//------Debug Signals available if MISC_ON is defined
output wire                   tinit_done_o,                        // Tinit done
output wire                   pll_lock_o,                          // PLL clock lock signal
output wire                   pix2byte_rstn_o,                     // Pixel2byte FIFO reset
//------Handshaking for Rx/Tx
input  wire                   clk_hs_en_i,
input  wire                   d_hs_en_i,
output wire                   d_hs_rdy_o,
output wire                   byte_clk_o,                          // Byte Clock
output wire                   c2d_ready_o,                         // Indicates that CMOS2DPHY is ready to receive data
//------DPHY ports
  // MIPI interface signals
  inout                       d0_p_io,        // D-PHY output data 0
  inout                       d0_n_io,        // D-PHY output data 0
  inout                       d1_p_o,         // D-PHY output data 1
  inout                       d1_n_o,         // D-PHY output data 1
inout  wire                   clk_p_o,                              // D-PHY output clock
inout  wire                   clk_n_o                               // D-PHY output clock
);

// -----------------------------------------------------------------------------
// Submodule Instantiations
// -----------------------------------------------------------------------------
csi2_output_dphy_tx # (
  .TX_GEAR        (TX_GEAR),
  .NUM_TX_LANE    (NUM_TX_LANE),
  .TINIT_COUNT    (TINIT_COUNT),
  .TINIT_VALUE    (TINIT_VALUE),
  .USER_TIMING    (USER_TIMING),
  .T_LPX          (T_LPX),
  .T_CLKPREP      (T_CLKPREP),
  .T_CLK_HSZERO   (T_CLK_HSZERO),
  .T_CLKPRE       (T_CLKPRE),
  .T_CLKPOST      (T_CLKPOST),
  .T_CLKTRAIL     (T_CLKTRAIL),
  .T_CLKEXIT      (T_CLKEXIT),
  .T_DATPREP      (T_DATPREP),
  .T_DAT_HSZERO   (T_DAT_HSZERO),
  .T_DATTRAIL     (T_DATTRAIL),
  .T_DATEXIT      (T_DATEXIT),
  .PKT_FORMATTER  (PKT_FORMATTER),
  .INTF_TYPE      (INTF_TYPE),
  .MISC           (MISC),
  .HS_DCS         (HS_DCS),
  .FRAME_CNT_EN   (FRAME_CNT_EN),
  .LINE_CNT_EN    (LINE_CNT_EN),
  .CLK_MODE       (CLK_MODE),
  .CM             (CM),
  .CN             (CN),
  .CO             (CO),
  .PKTHDR_FIFO_IMPL (PKTHDR_FIFO_IMPL),
  .PKTHDR_FIFO_DEPTH(PKTHDR_FIFO_DEPTH),
  .CRC16          (CRC16),
  .DATA_WIDTH     (DATA_WIDTH),
  .TX_FREQ_TGT    (TX_FREQ_TGT)
)
u_dphy_tx (
  .ref_clk_i      (ref_clk_i),
  .reset_n_i      (reset_n_i),
  .pd_dphy_i      (pd_dphy_i),
  .dphy_pkt_i     (64'd0),
  .dphy_pkten_i   (1'd0),
  .byte_data_i    (byte_data_i),
  .byte_data_en_i (byte_data_en_i),
  .sp_en_i        (sp_en_i),
  .lp_en_i        (lp_en_i),
  .frame_max_i    (frame_max_i),
  .ld_pyld_o      (ld_pyld_o),
  .vsync_start_i  (1'd1),
  .hsync_start_i  (1'd1),
  .vc_i           (vc_i),
  .dt_i           (dt_i),
  .wc_i           (wc_i),
  .tinit_done_o   (tinit_done_o),
  .pll_lock_o     (pll_lock_o),
  .pix2byte_rstn_o(pix2byte_rstn_o),
  .clk_hs_en_i    (clk_hs_en_i),
  .d_hs_en_i      (d_hs_en_i),
  .d_hs_rdy_o     (d_hs_rdy_o),
  .byte_clk_o     (byte_clk_o),
  .c2d_ready_o    (c2d_ready_o),
  // MIPI interface signals
  .d0_p_io        (d0_p_io),        // D-PHY output data 0
  .d0_n_io        (d0_n_io),        // D-PHY output data 0
  .d1_p_o         (d1_p_o),         // D-PHY output data 1
  .d1_n_o         (d1_n_o),         // D-PHY output data 1
  .clk_p_o        (clk_p_o),
  .clk_n_o        (clk_n_o)
);

endmodule
//==============================================================================
// dphy_tx.v
//==============================================================================


