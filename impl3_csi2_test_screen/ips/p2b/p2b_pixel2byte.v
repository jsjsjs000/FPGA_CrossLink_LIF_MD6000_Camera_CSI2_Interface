//===========================================================================
// Verilog file generated by Clarity Designer    10/02/2024    19:54:05  
// Filename  : p2b_pixel2byte.v                                                
// IP package: Pixel to Byte Converter 1.3                           
// Copyright(c) 2017 Lattice Semiconductor Corporation. All rights reserved. 
//===========================================================================

module p2b_pixel2byte (

////added ports for handshaking with LP HS controller
  input                  c2d_ready_i,
  input                  d_hs_rdy_i, // Flag from LPHS controller that indicates
                                     // it is ready to process data
  output                 d_hs_en_o,  // Flag that indicates request signal from
                                     // from pixel2byte to LPHS controller

  // clock and reset
  input wire                        pix_clk,
  input wire                        core_clk,
  input wire                        reset_n,
  input wire                        pix_rstn, 
    

  input wire                        fv_i,              // frame valid input for CMOS i/f
  input wire                        lv_i,              // line valid input for CMOS i/f
  input wire                        dvalid_i,          // data valid
  input wire [24-1:0]    pixdata_d0_i,

  // DPHY data wiDTh for RGB and RAW
  output wire                       byte_data_en_o,
  output wire [4*16-1:0] byte_data_o,	
  output wire [5:0]                 data_type_o,

  // Frame format for RGB
  output wire                       fv_start_o,
  output wire                       fv_end_o,
  output wire                       lv_start_o,
  output wire                       lv_end_o,
  output wire                       odd_line_o
);

wire zero_bit = 1'b0;

pixel2byte # (
  .DT            (6'h24),	
  .LANE_WIDTH    (2),
  .GEAR_16       (0),
  .DATA_WIDTH    (16),
  .WORD_WIDTH    (24),
  .DSI_FORMAT    (0),
  .NUM_PIX_LANE  (1)
)
pixel2byte_inst  (
////added ports for handshaking with LP HS controller
  .c2d_ready_i   (c2d_ready_i),
  .d_hs_rdy_i    (d_hs_rdy_i),
  .d_hs_en_o     (d_hs_en_o),

  .pix_clk       (pix_clk),
  .core_clk      (core_clk),
  .reset_n       (reset_n),
  .pix_rstn      (pix_rstn), 

  .vsync_i       (1'b0),        
  .hsync_i       (1'b0),        
  .de_i          (1'b0),           
  .fv_i          (fv_i),          
  .lv_i          (lv_i),          
  .dvalid_i      (dvalid_i),      
  .pixdata_d9_i  ({24{1'b0}}),   
  .pixdata_d8_i  ({24{1'b0}}),   
  .pixdata_d7_i  ({24{1'b0}}),   
  .pixdata_d6_i  ({24{1'b0}}),   
  .pixdata_d5_i  ({24{1'b0}}),   
  .pixdata_d4_i  ({24{1'b0}}),   
  .pixdata_d3_i  ({24{1'b0}}),   
  .pixdata_d2_i  ({24{1'b0}}),   
  .pixdata_d1_i  ({24{1'b0}}),   
  .pixdata_d0_i  (pixdata_d0_i),

  // DPHY data width for RGB and RAW
  .byte_data_en_o (byte_data_en_o),
  .byte_data_o    (byte_data_o),	
  .data_type_o    (data_type_o),

  // Frame format for RGB
  .vsync_start_o  (),
  .vsync_end_o    (),
  .hsync_start_o  (),
  .hsync_end_o    (),
  .fv_start_o     (fv_start_o),
  .fv_end_o       (fv_end_o),
  .lv_start_o     (lv_start_o),
  .lv_end_o       (lv_end_o),
  .odd_line_o     (odd_line_o)
);

endmodule
